{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/relations.js","webpack:///./lib/model.js","webpack:///./lib/model-index.js","webpack:///./lib/middlewares/fetch-response.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./lib/middlewares/fetch-request.js","webpack:///./lib/middlewares/index.js","webpack:///./lib/rest-service.js","webpack:///./lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","has","type","targetModel","foreignKey","localKey","hasOne","bind","hasMany","[object Object]","path","service","config","this","idField","relations","params","include","validateIncludedModels","query","endpoint","getEndpointAndQuery","responseData","length","includedEntities","_getIncludedEntities","_mergeIncludedEntities","assign","payload","post","put","delete","fetchPromises","forEach","relationKey","ids","getRelation","mainEntity","push","getModel","getRelatedModelResults","Promise","all","results","index","hash","entries","relatedEntities","array","key","item","keyValues","groupBy","localValue","currRelatedEntities","modelName","relation","Error","hasRelation","hasModel","modelIndex","models","model","async","response","next","json","then","stringifyPrimitive","v","isFinite","obj","sep","eq","undefined","map","objectKeys","k","ks","encodeURIComponent","isArray","join","Array","xs","toString","f","res","keys","prop","qs","options","regexp","split","maxKeys","len","kstr","vstr","x","replace","idx","indexOf","substr","decodeURIComponent","decode","parse","encode","stringify","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","oldValue","set","callback","thisArg","items","iteratorFor","values","iterator","methods","Request","clone","body","_bodyInit","Body","Response","status","statusText","headers","url","error","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","line","parts","shift","trim","responseURL","responseText","onerror","TypeError","ontimeout","open","method","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","done","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","text","readAsText","chars","fromCharCode","readArrayBufferAsText","JSON","upcased","mode","toUpperCase","referrer","form","bytes","bodyInit","ok","qry","fetchRequest","fetchResponse","Model","ModelConfig","actions","skippedMethods","alias","args","RestService","baseURL","middlewares","initialInput","reduceMiddlewares","_url","replaceParams","addModel","modelConfig","mdlCfg","CustomModel","methodName","httpMethod","fullPath","getEndpoint","dynamicRequestFactory"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","const has = (type, targetModel, foreignKey = 'id', localKey = 'id') => ({\n  type,\n  foreignKey,\n  localKey,\n  targetModel\n});\nmodule.exports.hasOne = has.bind(null, 'one');\nmodule.exports.hasMany = has.bind(null, 'many');\n","function groupBy(array, key) {\n  const hash = {};\n  array.forEach(item => {\n    if (item[key]) {\n      const keyValues = item[key];\n      hash[keyValues] = hash [keyValues] || [];\n      hash[keyValues].push(item);\n    }\n\n  });\n  return hash;\n}\n\n\nclass Model {\n  constructor(name, path, service, config) {\n    this.name = name;\n    this.path = path;\n    this.service = service;\n    this.idField = config.idField;\n    this.relations = config.relations;\n  }\n\n  /**\n   *\n   * @param params Object route and query params\n   * @param include array string array of related Model to include in result\n   * @returns {Promise.<TResult>}\n   */\n  async query(params, include = []) {\n    this.validateIncludedModels(include);\n    const {query, endpoint} = this.service.getEndpointAndQuery(this.path, params);\n    const responseData = await this.service.get(`${endpoint}`, query);\n    if (include.length) {\n      const includedEntities = await this._getIncludedEntities(responseData, include);\n      this._mergeIncludedEntities(responseData, include, includedEntities);\n    }\n    return responseData;\n  }\n\n  async get(params, include = []) {\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    const responseData = await this.service.get(`${endpoint}`, Object.assign({}, query));\n    if (include.length) {\n      const includedEntities = await this._getIncludedEntities([responseData], include);\n      this._mergeIncludedEntities([responseData], include, includedEntities);\n    }\n    return responseData;\n  }\n\n  /**\n   *\n   * @param payload Object if path has a placeholder it would be extracted from payload\n   * @returns {Promise.<TResult>}\n   */\n  async create(payload, query = {}) {// example {}\n    const {endpoint} = this.service.getEndpointAndQuery(this.path, payload);\n    return this.service.post(endpoint, payload, query);\n  }\n\n  async update(params, payload) {\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    return this.service.put(endpoint, payload, query);\n  }\n\n  async delete(params, payload = {}) {\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    return this.service.delete(endpoint, payload, query);\n  }\n\n  async _getIncludedEntities(responseData, include) {\n    const fetchPromises = [];\n    include.forEach((relationKey) => {\n      const ids = [];\n      const {foreignKey, targetModel, localKey} = this.getRelation(relationKey);\n      responseData.forEach((mainEntity) => {// todo: index response data\n        ids.push(mainEntity[localKey]);\n      });\n      fetchPromises.push(\n          this.service.getModel(targetModel).query({[`${foreignKey}[]`]: ids})\n      );\n    });\n\n    const getRelatedModelResults = await Promise.all(fetchPromises);\n\n    const results = {};\n    include.forEach((relationKey, index) => {\n      results[relationKey] = getRelatedModelResults[index];\n    });\n    return results;\n  }\n\n  _mergeIncludedEntities(responseData, include, includedEntities) {\n    const hash = {};\n    Object.entries(includedEntities).forEach(([relationKey, relatedEntities]) => {\n      const {foreignKey} = this.relations[relationKey];\n      hash[relationKey] = groupBy(relatedEntities, foreignKey);\n    });\n    responseData.forEach(mainEntity => {\n      include.forEach(relationKey => {\n        const {type, localKey} = this.relations[relationKey];\n        const localValue = mainEntity[localKey];\n        const currRelatedEntities = hash[relationKey][localValue] || [];\n        mainEntity[relationKey] = type === 'many' ? currRelatedEntities : (currRelatedEntities[0] || null);\n      });\n    });\n  }\n\n  hasRelation(modelName) {\n    return this.relations.hasOwnProperty(modelName);\n  }\n\n  getRelation(modelName) {\n    const relation = this.relations[modelName];\n    if (!relation) {\n      throw new Error(`No relation defined with name \"${modelName}\". Please define hasOne|hasMany relation to \"${this.name}\" in model config of Model.`);\n    }\n    return relation;\n  }\n\n  validateIncludedModels(include) {\n    include.forEach(relationKey => {\n      if (!this.hasRelation(relationKey)) {\n        throw new Error(`Trying to use relation with field \"${relationKey}\" in query results of \"${this.name}\", but relation is not defined in modelConfig. Define using modelConfig.hasOne() or modelConfig.hasMany().`);\n      }\n      const {targetModel} = this.getRelation(relationKey);\n      if (!this.service.hasModel(targetModel)) {\n        throw new Error(`Undefined model \"${targetModel}\". Please define model before using.`);\n      }\n    });\n  }\n}\n\n\nmodule.exports = Model;","const modelIndex = {\n  models: {},\n  addModel(key, model) {\n    this.models[key] = model;\n    return model;\n  }\n};\n\nmodule.exports = modelIndex;","'use strict';\n\nmodule.exports = async function (response, next) {\n  response.json().then(next);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","require('isomorphic-fetch');\nconst qs = require('querystring');\n\nmodule.exports = function ({method, url, query, payload, headers}, next) {\n  let qry = Object.values(query).length > 0 ? `?${qs.stringify(query)}` : '';\n  const options = {method, headers};\n  if (payload) {\n    const body = Object.values(payload).length > 0 ? JSON.stringify(payload) : '';\n    if (body) {\n      options.body = body;\n    }\n\n  }\n  fetch(`${url}${qry}`, options).then(next);\n};","\nmodule.exports = {\n  fetchRequest: require('./fetch-request'),\n  fetchResponse: require('./fetch-response')\n};","const {fetchResponse, fetchRequest} = require('./middlewares');\nconst modelIndex = require('./model-index');\nconst Model = require('./model');\nconst {hasOne, hasMany} = require('./relations');\n\nfunction replaceParams(url, params) {\n  let _url = url;\n  Object.entries(params).forEach(([key, value]) => {\n    _url = _url.replace(`:${key}`, value);\n  });\n  return _url;\n}\n\nfunction dynamicRequestFactory(httpMethod, path) {\n  return async function (params, query, payload) {\n    const fullPath = `${this.path}${path}`;\n    const responseData = await\n        this.service[httpMethod.toLowerCase()](`${this.service.getEndpoint(fullPath, params)}`, query, payload);\n    return responseData;\n  }\n}\n\n\nclass ModelConfig {\n  constructor() {\n    this.relations = {};\n    this.idField = 'id';\n    this.actions = {};\n    this.skippedMethods = [];\n  }\n\n  hasOne(targetModel, alias, ...args) {\n    this.relations[alias] = hasOne(targetModel, ...args);\n    return this;\n  }\n\n  hasMany(targetModel, alias, ...args) {\n    this.relations[alias] = hasMany(targetModel, ...args);\n    return this;\n  }\n\n  customActions(actions) {\n    this.actions = actions;\n    return this;\n  }\n}\n\nclass RestService {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n    this.middlewares = [\n      fetchRequest,\n      fetchResponse\n    ];\n  }\n\n  reduceMiddlewares(initialInput, array) {\n    return new Promise(async function (resolve, reject) {\n      try {\n        let result = initialInput;\n        for (let i = 0; i < array.length; i++) {\n          result = await new Promise(function (res) {\n              array[i](result, res);\n          })\n        }\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  useMiddlewares(middlewares) {\n    this.middlewares = middlewares;\n  }\n\n  get(url, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"GET\", url, query, headers}, this.middlewares);\n  }\n\n  post(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"POST\", url, payload, query, headers}, this.middlewares);\n  }\n\n  put(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"PUT\", url, payload, query, headers}, this.middlewares);\n  }\n\n  delete(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"DELETE\", url, payload, query, headers}, this.middlewares);\n  }\n\n  getEndpoint(path, params = {}) {\n    return replaceParams(`${this.baseURL}${path}`, params);\n  }\n\n  getEndpointAndQuery(path, params) {\n    let endpoint = `${this.baseURL}${path}`;\n    const query = {};\n    Object.entries(params).forEach(([key, value]) => {\n      if (endpoint.indexOf(`:${key}`) !== -1) {\n        endpoint = endpoint.replace(`:${key}`, value);\n      } else {\n        query[key] = value;\n      }\n    });\n    return {endpoint: endpoint, query};\n  }\n\n  addModel({path, alias, relations}) {\n    return modelIndex.addModel(alias, new Model(path, this, relations))\n  }\n\n  getModel(modelName) {\n    const targetModel = modelIndex.models[modelName];\n    if (!targetModel) {\n      throw new Error(`Undefined model \"${modelName}\". Please define model before using.`);\n    }\n    return targetModel;\n  }\n\n\n  hasModel(modelName) {\n    return modelIndex.models.hasOwnProperty(modelName);\n  }\n\n  registerModel(name, path, modelConfig) {\n    const mdlCfg = modelConfig || new ModelConfig();\n\n    class CustomModel extends Model {\n    }\n\n    Object.entries(mdlCfg.actions).forEach(([methodName, {method: httpMethod, path}]) => {\n      Object.defineProperty(CustomModel.prototype, methodName, {\n        value: dynamicRequestFactory(httpMethod, path)\n      });\n    });\n\n    return modelIndex.addModel(name, new CustomModel(name, path, this, mdlCfg));\n  }\n\n  static modelConfig() {\n    return new ModelConfig();\n  }\n}\n\nObject.defineProperty(RestService, 'defaultMiddlewares', {value: {fetchResponse, fetchRequest}});\n\nmodule.exports = RestService;","module.exports = require('./rest-service');"],"sourceRoot":""}