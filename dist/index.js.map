{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./lib/relations.js","webpack:///./lib/model.js","webpack:///./lib/model-index.js","webpack:///./lib/middlewares/fetch-response.js","webpack:///./lib/middlewares/fetch-request.js","webpack:///./lib/middlewares/index.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./lib/handlers/request/fetch.js","webpack:///./lib/rest-service.js","webpack:///./lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","decode","parse","encode","stringify","self","fetch","bind","has","type","alias","foreignKey","localKey","targetModel","hasOne","hasMany","[object Object]","path","service","config","this","idField","relations","params","include","validateIncludedModels","query","endpoint","getEndpointAndQuery","responseData","length","includedEntities","_getIncludedEntities","_mergeIncludedEntities","assign","payload","post","put","delete","ids","map","item","getRelatedModelResults","Promise","all","modelName","getRelation","getModel","results","forEach","modelKey","index","hash","entries","relatedEntities","array","key","keyValues","push","groupBy","mainEntity","mainEntityId","currRelatedEntities","relation","Error","hasRelation","hasModel","modelIndex","models","model","async","response","next","json","then","qs","method","url","headers","qry","values","options","body","JSON","fetchRequest","fetchResponse","stringifyPrimitive","v","isFinite","obj","sep","eq","undefined","objectKeys","k","ks","encodeURIComponent","isArray","join","Array","xs","toString","f","res","keys","prop","regexp","split","maxKeys","len","kstr","vstr","x","replace","idx","indexOf","substr","decodeURIComponent","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","oldValue","set","callback","thisArg","items","iteratorFor","iterator","methods","Request","clone","_bodyInit","Body","Response","status","statusText","error","redirectStatuses","redirect","RangeError","location","input","init","resolve","reject","request","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","line","parts","shift","trim","responseURL","responseText","onerror","TypeError","ontimeout","open","credentials","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","done","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","text","readAsText","chars","fromCharCode","readArrayBufferAsText","upcased","mode","toUpperCase","referrer","form","bytes","bodyInit","ok","payloadRequest","Model","ModelConfig","actions","skippedMethods","args","baseURL","middlewares","initialInput","reduceMiddlewares","_url","replaceParams","addModel","modelConfig","mdlCfg","CustomModel","methodName","httpMethod","fullPath","getEndpoint","dynamicRequestFactory"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","const has = (type, alias, foreignKey = 'id', localKey = 'id') => ({\n  type,\n  foreignKey,\n  localKey,\n  targetModel: alias\n});\nmodule.exports.hasOne = has.bind(null, 'one');\nmodule.exports.hasMany = has.bind(null, 'many');\n","function groupBy(array, key) {\n  const hash = {};\n  array.forEach(item => {\n    if (item[key]) {\n      const keyValues = item[key];\n      hash[keyValues] = hash [keyValues] || [];\n      hash[keyValues].push(item);\n    }\n\n  });\n  return hash;\n}\n\n\nclass Model {\n  constructor(name, path, service, config) {\n    this.name = name;\n    this.path = path;\n    this.service = service;\n    this.idField = config.idField;\n    this.relations = config.relations;\n  }\n\n  /**\n   *\n   * @param params Object route and query params\n   * @param include array string array of related Model to include in result\n   * @returns {Promise.<TResult>}\n   */\n  // {level: 1}\n  async query(params, include = []) { // example {articleId:1} for\n    this.validateIncludedModels(include);\n    const {query, endpoint} = this.service.getEndpointAndQuery(this.path, params);\n    const responseData = await this.service.get(`${endpoint}`, query);\n    if (include.length) {\n      const includedEntities = await this._getIncludedEntities(responseData, include);\n      this._mergeIncludedEntities(responseData, include, includedEntities);\n    }\n    return responseData;\n  }\n\n  async get(params, include = []) {// example {articleId:1, id:2}\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    const responseData = await this.service.get(`${endpoint}`, Object.assign({}, query));\n    if (include.length) {\n      const includedEntities = await this._getIncludedEntities([responseData], include);\n      this._mergeIncludedEntities([responseData], include, includedEntities);\n    }\n    return responseData;\n  }\n\n  /**\n   *\n   * @param payload Object if path has a placeholder it would be extracted from payload\n   * @returns {Promise.<TResult>}\n   */\n  async create(payload, query = {}) {// example {}\n    const {endpoint} = this.service.getEndpointAndQuery(this.path, payload);\n    return this.service.post(endpoint, payload, query);\n  }\n\n  async update(params, payload) {\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    return this.service.put(endpoint, payload, query);\n  }\n\n  async delete(params, payload = {}) {\n    const {query, endpoint} = this.service.getEndpointAndQuery(`${this.path}/:id`, params);\n    return this.service.delete(endpoint, payload, query);\n  }\n\n  async _getIncludedEntities(responseData, include) {\n    const ids = responseData.map(item => item[this.idField]);\n    const getRelatedModelResults = await Promise.all(include.map(modelName => {\n      const {foreignKey} = this.getRelation(modelName);\n      return this.service.getModel(modelName).query({[foreignKey]: ids});\n    }));\n    const results = {};\n    include.forEach((modelKey, index) => {\n      results[modelKey] = getRelatedModelResults[index];\n    });\n    return results;\n  }\n\n  _mergeIncludedEntities(responseData, include, includedEntities) {\n    const hash = {};\n    Object.entries(includedEntities).forEach(([modelKey, relatedEntities]) => {\n      const {foreignKey} = this.relations[modelKey];\n      hash[modelKey] = groupBy(relatedEntities, foreignKey);\n    });\n    responseData.forEach(mainEntity => {\n      include.forEach(modelKey => {\n        const {type} = this.relations[modelKey];\n        const mainEntityId = mainEntity[this.idField];\n        const currRelatedEntities = hash[modelKey][mainEntityId] || [];\n        mainEntity[modelKey] = type === 'many' ? currRelatedEntities : (currRelatedEntities[0] || null);\n      });\n    });\n  }\n\n  hasRelation(modelName) {\n    return this.relations.hasOwnProperty(modelName);\n  }\n\n  getRelation(modelName) {\n    const relation = this.relations[modelName];\n    if (!relation) {\n      throw new Error(`No relation defined to model \"${modelName}\". Please define hasOne|hasMany relation to \"${this.name}\" in model config of Model.`);\n    }\n    return relation;\n  }\n\n  validateIncludedModels(include) {\n    include.forEach(modelName => {\n      if (!this.hasRelation(modelName)) {\n        throw new Error(`Trying to include model \"${modelName}\" in query results of \"${this.name}\", but relation is not defined in modelConfig. Define using modelConfig.hasOne() or modelConfig.hasMany().`);\n      }\n      if (!this.service.hasModel(modelName)) {\n        throw new Error(`Undefined model \"${modelName}\". Please define model before using.`);\n      }\n    });\n  }\n}\n\n\nmodule.exports = Model;","const modelIndex = {\n  models: {},\n  addModel(key, model) {\n    this.models[key] = model;\n    return model;\n  }\n};\n\nmodule.exports = modelIndex;","'use strict';\n\nmodule.exports = async function (response, next) {\n  response.json().then(next);\n};","require('isomorphic-fetch');\nconst qs = require('querystring');\n\nmodule.exports = function ({method, url, query, payload, headers}, next) {\n  let qry = Object.values(query).length > 0 ? `?${qs.stringify(query)}` : '';\n  const options = {method, headers};\n  if (payload) {\n    const body = Object.values(payload).length > 0 ? JSON.stringify(payload) : '';\n    if (body) {\n      options.body = body;\n    }\n\n  }\n  fetch(`${url}${qry}`, options).then(next);\n};","\nmodule.exports = {\n  fetchRequest: require('./fetch-request'),\n  fetchResponse: require('./fetch-response')\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","require('isomorphic-fetch');\nconst qs = require('querystring');\n\n\nfunction payloadRequest(method, url, payload = {}, query = {}, headers = {}) {\n  const body = Object.values(payload).length > 0 ? JSON.stringify(payload) : '';\n  let qry = Object.values(query).length > 0 ? `?${qs.stringify(query)}` : '';\n  const options = {method, headers};\n  if (body) {\n    options.body = body;\n  }\n  return fetch(`${url}${qry}`, options)\n      .then(response => response.json())\n      .then((body) => {\n        return {body};\n      });\n}\n\nconst request = {};\n\nrequest.get = (url, query = {}, headers = {}) => {\n  let qry = Object.values(query).length > 0 ? `?${qs.stringify(query)}` : '';\n  return fetch(`${url}${qry}`, {method: 'GET', headers})\n      .then(response => {\n        return response.json()})\n      .then((body) => {\n        return {body};\n      });\n};\n\nrequest.post = payloadRequest.bind(null, 'POST');\nrequest.put = payloadRequest.bind(null, 'PUT');\nrequest.delete = payloadRequest.bind(null, 'DELETE');\n\nmodule.exports = request;","const requestHandler = require('./handlers/request/fetch');\nconst {fetchResponse, fetchRequest} = require('./middlewares');\nconst modelIndex = require('./model-index');\nconst Model = require('./model');\nconst {hasOne, hasMany} = require('./relations');\n\nfunction replaceParams(url, params) {\n  let _url = url;\n  Object.entries(params).forEach(([key, value]) => {\n    _url = _url.replace(`:${key}`, value);\n  });\n  return _url;\n}\n\nfunction dynamicRequestFactory(httpMethod, path) {\n  return async function (params, query, payload) {\n    const fullPath = `${this.path}${path}`;\n    const responseData = await\n        this.service[httpMethod.toLowerCase()](`${this.service.getEndpoint(fullPath, params)}`, query, payload);\n    return responseData;\n  }\n}\n\n\nclass ModelConfig {\n  constructor() {\n    this.relations = {};\n    this.idField = 'id';\n    this.actions = {};\n    this.skippedMethods = [];\n  }\n\n  hasOne(alias, ...args) {\n    this.relations[alias] = hasOne(alias, ...args);\n    return this;\n  }\n\n  hasMany(alias, ...args) {\n    this.relations[alias] = hasMany(alias, ...args);\n    return this;\n  }\n\n  customActions(actions) {\n    this.actions = actions;\n    return this;\n  }\n}\n\nclass RestService {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n    this.middlewares = [\n      fetchRequest,\n      fetchResponse\n    ];\n  }\n\n  reduceMiddlewares(initialInput, array) {\n    return new Promise(async function (resolve, reject) {\n      try {\n        let result = initialInput;\n        for (let i = 0; i < array.length; i++) {\n          result = await new Promise(function (res) {\n            array[i](result, res)\n          })\n        }\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  useMiddlewares(middlewares) {\n    this.middlewares = middlewares;\n  }\n\n  get(url, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"GET\", url, query, headers}, this.middlewares);\n  }\n\n  post(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"POST\", url, payload, query, headers}, this.middlewares);\n  }\n\n  put(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"PUT\", url, payload, query, headers}, this.middlewares);\n  }\n\n  delete(url, payload, query = {}, headers = {}) {\n    return this.reduceMiddlewares({method: \"DELETE\", url, payload, query, headers}, this.middlewares);\n  }\n\n  getEndpoint(path, params = {}) {\n    return replaceParams(`${this.baseURL}${path}`, params);\n  }\n\n  getEndpointAndQuery(path, params) {\n    let endpoint = `${this.baseURL}${path}`;\n    const query = {};\n    Object.entries(params).forEach(([key, value]) => {\n      if (endpoint.indexOf(`:${key}`) !== -1) {\n        endpoint = endpoint.replace(`:${key}`, value);\n      } else {\n        query[key] = value;\n      }\n    });\n    return {endpoint: endpoint, query};\n  }\n\n  addModel({path, alias, relations}) {\n    return modelIndex.addModel(alias, new Model(path, this, relations))\n  }\n\n  getModel(modelName) {\n    const targetModel = modelIndex.models[modelName];\n    if (!targetModel) {\n      throw new Error(`Undefined model \"${modelName}\". Please define model before using.`);\n    }\n    return targetModel;\n  }\n\n  hasModel(modelName) {\n    return modelIndex.models.hasOwnProperty(modelName);\n  }\n\n  registerModel(name, path, modelConfig) {\n    const mdlCfg = modelConfig || new ModelConfig();\n\n    class CustomModel extends Model {\n    }\n\n    Object.entries(mdlCfg.actions).forEach(([methodName, {method: httpMethod, path}]) => {\n      Object.defineProperty(CustomModel.prototype, methodName, {\n        value: dynamicRequestFactory(httpMethod, path)\n      });\n    });\n\n    return modelIndex.addModel(name, new CustomModel(name, path, this, mdlCfg));\n  }\n\n  static modelConfig() {\n    return new ModelConfig();\n  }\n}\n\nmodule.exports = RestService;","module.exports = require('./rest-service');"],"sourceRoot":""}